{"version":3,"sources":["logo.svg","pages/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","randomBall","quantity","setQuantity","src","Math","floor","random","className","value","map","getQuantity","to","link","getLink","onClick","slice","item","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,I,mDCIA,SAASA,IAEtB,MAAgCC,mBAAS,CAACC,MAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KAoBA,SAASF,IACP,IACIG,EAAM,QAGV,OAFAA,GAFaC,KAAKC,MAAsB,GAAhBD,KAAKE,UAG7BH,GAAO,OACA,qBAAKA,IAAKA,EAAKI,UAAU,UAOlC,OACE,gCACC,mBAAGA,UAAU,aAAb,SA1BH,WACE,IAAIC,EAAQ,EAMZ,OALAP,EAASQ,KAAI,WACXD,GAAS,KAEIA,GAAXA,EAAQ,EAAY,QACT,SAoBaE,KAC3B,cAAC,IAAD,CAAMH,UAAU,aAAaI,GAlChC,WACE,IAAIC,EAAO,GAIX,OAHAX,EAASQ,KAAI,WACXG,GAAQ,YAEHA,EA6B2BC,GAAWC,QAlB/C,WACEZ,EAAY,GAAD,mBAAKD,EAASc,SAAd,CAAuBf,QAiBjC,yBACA,cAAC,IAAD,CAAMO,UAAU,gBAAgBI,GAAG,IAAIG,QAR1C,WACEZ,EAAY,KAOX,2BACA,qBAAKK,UAAU,iBAAf,SACGN,EAASQ,KAAI,SAACO,GACZ,OAAOA,UC3BFC,MAVf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOW,KAAK,IAAIC,UAAWrB,SCApBsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.833e603a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./styles.css\"\nimport { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Home() {\n\n  const [quantity, setQuantity] = useState([randomBall()])\n  function getLink() {\n    let link = \"\";\n    quantity.map(() => {\n      link += \"/balls\"\n    })\n    return link;\n  }\n  function getQuantity() {\n    let value = 0;\n    quantity.map(() => {\n      value += 1\n    })\n    if (value < 2) value += \" BALL\"\n     else value += \" BALLS\"\n    return value\n  }\n  function moreBalls() {\n    setQuantity([...quantity.slice(), randomBall()])\n  }\n  function randomBall() {\n    let ballId = Math.floor(Math.random() * 10);\n    let src = \"/ball\"\n    src += ballId\n    src += \".jpg\"\n    return <img src={src} className=\"balls\" />\n  }\n\n  function noBalls() {\n    setQuantity([])\n  }\n\n  return(\n    <div>\n     <p className=\"helloWorld\">{getQuantity()}</p>\n     <Link className=\"button add\" to={getLink()} onClick={moreBalls}>More balls!</Link>\n     <Link className=\"button delete\" to=\"/\" onClick={noBalls}>Drop balls...</Link>\n     <div className=\"ballsContainer\">\n       {quantity.map((item) => {\n          return item\n       })}\n     </div>\n\n    </div>\n  )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router, Route, Link,\n} from \"react-router-dom\";\n\nimport Home from \"./pages/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" component={Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}